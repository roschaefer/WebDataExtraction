<?xml version="1.0" encoding="UTF-8"?>
<scraping-session use-strict-mode="true"><script-instances><script-instances when-to-run="10" sequence="1" enabled="true"><script><script-text>/**
 * Set the paths of the input- and output-files.
 * 
 * IMPORTANT:
 * On Windows, you have to specify the ABSOLUTE PATH to the files.
 * Otherwise, Screen Scraper will search for relative links from its installation folder.
 */
session.setVariable(&quot;IN_PATH&quot;, &quot;YT_INPUT.txt&quot;);
session.setVariable(&quot;OUT_PATH&quot;, &quot;youtube.xml&quot;);

File inputFile = new File(session.getVariable(&quot;IN_PATH&quot;));

// These two objects are needed to read the file.
FileReader in = new FileReader (inputFile);
BufferedReader buffRead = new BufferedReader (in);

FileWriter out = new FileWriter(session.getVariable(&quot;OUT_PATH&quot;));
out.write (&quot;&lt;result>\n&quot;);
out.write (&quot;\t&lt;youtube>\n&quot;);
out.close ();


// Read the file in line-by-line.  Each line in the text file
// will contain a search term.
while (( searchTerm = buffRead.readLine ())!=null) {
    // Set a session variable corresponding to the search term.
    session.setVariable (&quot;SEARCH&quot;, searchTerm);

    // Remember we need to initialize the PAGE session variable, just
    // in case we need to iterate through multiple pages of search results.
    // We begin at page 1 for each search.
    session.setVariable (&quot;PAGE&quot;, &quot;1&quot;);

    // Get search results for this particular search term.
    session.scrapeFile (&quot;Next Page&quot;);
}


// Close up the objects to indicate we're done reading the file.
in.close ();
buffRead.close ();
</script-text><name>YoutTube-INIT</name><language>Interpreted Java</language></script></script-instances><script-instances when-to-run="20" sequence="2" enabled="true"><script><script-text>FileWriter out = null;
try {
	session.log( &quot;Writing data to a file.&quot; );

	// Open up the file to be appended to.
	out = new FileWriter(session.getVariable(&quot;OUT_PATH&quot;), true);
	out.write (&quot;\t&lt;/youtube>\n&quot;);
	out.write (&quot;&lt;/result>\n&quot;);
	out.close ();
} catch (Exception e) {
   session.log (&quot;An error occurred while writing the data to a file: &quot; + e.getMessage());
}</script-text><name>YouTube-FINAL</name><language>Interpreted Java</language></script></script-instances><owner-type>ScrapingSession</owner-type><owner-name>Youtube</owner-name></script-instances><name>Youtube</name><notes></notes><cookiePolicy>0</cookiePolicy><maxHTTPRequests>1</maxHTTPRequests><external_proxy_username></external_proxy_username><external_proxy_password></external_proxy_password><external_proxy_host></external_proxy_host><external_proxy_port></external_proxy_port><external_nt_proxy_username></external_nt_proxy_username><external_nt_proxy_password></external_nt_proxy_password><external_nt_proxy_domain></external_nt_proxy_domain><external_nt_proxy_host></external_nt_proxy_host><anonymize>false</anonymize><terminate_proxies_on_completion>false</terminate_proxies_on_completion><number_of_required_proxies>5</number_of_required_proxies><originator_edition>0</originator_edition><logging_level>1</logging_level><date_exported>Dezember 06, 2012 14:19:37</date_exported><character_set>UTF-8</character_set><created_by_version>6.0</created_by_version><scrapeable-files sequence="1" will-be-invoked-manually="false" tidy-html="jtidy"><last-scraped-data></last-scraped-data><URL>https://www.youtube.com/results</URL><last-request></last-request><name>Next Page</name><extractor-patterns sequence="1" automatically-save-in-session-variable="false" if-saved-in-session-variable="0" filter-duplicates="false" cache-data-set="false" will-be-invoked-manually="false"><pattern-text>&lt;li class=&quot;~@CssClass@~&quot; data-context-item-title=&quot;~@TITLE@~&quot; data-context-item-type=&quot;video&quot; data-context-item-time=&quot;~@TIME@~&quot; data-context-item-user=&quot;~@UPLOADER@~&quot; data-context-item-id=&quot;~@VID@~&quot; data-context-item-views=&quot;~@AUFRUFE@~&quot;></pattern-text><identifier>Videos</identifier><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="4"><regular-expression>[^&quot;]*</regular-expression><identifier>UPLOADER</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="5"><regular-expression>[^&quot;]*</regular-expression><identifier>VID</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="6"><regular-expression>[^&quot;]*</regular-expression><identifier>AUFRUFE</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="3"><regular-expression>[^&quot;]*</regular-expression><identifier>TIME</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="2"><regular-expression>[^&quot;]*</regular-expression><identifier>TITLE</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="1"><regular-expression>[^&quot;]*</regular-expression><identifier>CssClass</identifier></extractor-pattern-tokens><script-instances><script-instances when-to-run="80" sequence="1" enabled="true"><script><script-text>FileWriter out = null;
try {
	session.log( &quot;Writing data to a file.&quot; );

	// Open up the file to be appended to.
	out = new FileWriter (session.getVariable(&quot;OUT_PATH&quot;), true);

  // Write out the data to the file.

	String title = dataRecord.get (&quot;TITLE&quot;);
	String time = dataRecord.get (&quot;TIME&quot;);
	String uploader = dataRecord.get (&quot;UPLOADER&quot;);
	String vid = dataRecord.get (&quot;VID&quot;);
	String views = dataRecord.get (&quot;AUFRUFE&quot;);


	// Transform variable:
	views = views.replaceAll (&quot;\\,&quot;, &quot;&quot;).trim ();
	String[] tmp = views.split (&quot;\\s+&quot;);
	views = tmp[0];


	out.write (&quot;\t\t&lt;result>\n&quot;);

	// I know, I know ...
	out.write (&quot;\t\t\t&lt;title>&lt;![CDATA[&quot; + title + &quot;]]>&lt;/title>\n&quot;);
	out.write (&quot;\t\t\t&lt;time>&quot; + time + &quot;&lt;/time>\n&quot;);
	out.write (&quot;\t\t\t&lt;uploader>&quot; + uploader + &quot;&lt;/uploader>\n&quot;);
	out.write (&quot;\t\t\t&lt;id>&quot; + vid + &quot;&lt;/id>\n&quot;);
	out.write (&quot;\t\t\t&lt;views>&quot; + views + &quot;&lt;/views>\n&quot;);

	out.write (&quot;\t\t&lt;/result>\n&quot;);


	// Close up the file.
	out.close();


	// Process the detailed page:
	// We do not need any information from the detailed view.
	// However, the specification forces us to load the page anyway.
	session.setVariable (&quot;VIDID&quot;, vid);
	session.scrapeFile (&quot;Detailed&quot;);

} catch(Exception e) {
   session.log( &quot;An error occurred while writing the data to a file: &quot; + e.getMessage() );
}
</script-text><name>YouTube-PAGE-OUT</name><language>Interpreted Java</language></script></script-instances><owner-type>ExtractorPattern</owner-type><owner-name>Videos</owner-name></script-instances></extractor-patterns><extractor-patterns sequence="2" automatically-save-in-session-variable="false" if-saved-in-session-variable="0" filter-duplicates="false" cache-data-set="false" will-be-invoked-manually="false"><pattern-text>&lt;a href=&quot;/results?search_query=~@KEYWORD@~&amp;amp;page=~@PAGE@~&quot; class=&quot;~@CLASS@~&quot; data-sessionlink=&quot;~@Identifier@~&quot; data-page=&quot;~@DATAPAGE@~&quot;>&lt;span class=&quot;yt-uix-button-content&quot;>~@NAN@~&lt;/span>&lt;/a></pattern-text><identifier>Untitled Extractor Pattern</identifier><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="5"><regular-expression>[\d,]+</regular-expression><identifier>DATAPAGE</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="1"><regular-expression>[^&amp;&quot;]*</regular-expression><identifier>KEYWORD</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="6"><regular-expression>[^\d,]+</regular-expression><identifier>NAN</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="true" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="2"><regular-expression>[\d,]+</regular-expression><identifier>PAGE</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="3"><regular-expression>[^&quot;]*</regular-expression><identifier>CLASS</identifier></extractor-pattern-tokens><extractor-pattern-tokens optional="false" save-in-session-variable="false" compound-key="true" strip-html="false" resolve-relative-url="false" replace-html-entities="false" trim-white-space="false" exclude-from-data="false" null-session-variable="false" sequence="4"><regular-expression>[^&quot;]*</regular-expression><identifier>Identifier</identifier></extractor-pattern-tokens><script-instances><script-instances when-to-run="85" sequence="1" enabled="true"><script><script-text>
//This will scrape Search results page

// We are only interested in the first 10 pages for
// performance reasons.

// Feel free to remove the if to scrap them all.

System.out.println (&quot;|||||| &quot; + session.getVariable (&quot;PAGE&quot;).getClass().getName());

String pagestr = (String) session.getVariable (&quot;PAGE&quot;);
int page = Integer.parseInt (pagestr.trim ());

if (page &lt; 5) {
	session.scrapeFile (&quot;Next Page&quot;);
}
</script-text><name>Youtube-NEXT</name><language>Interpreted Java</language></script></script-instances><owner-type>ExtractorPattern</owner-type><owner-name>Untitled Extractor Pattern</owner-name></script-instances></extractor-patterns><HTTPParameters sequence="1"><key>search_query</key><type>GET</type><value>~#SEARCH#~</value></HTTPParameters><HTTPParameters sequence="2"><key>page</key><type>GET</type><value>~#PAGE#~</value></HTTPParameters><script-instances><owner-type>ScrapeableFile</owner-type><owner-name>Next Page</owner-name></script-instances></scrapeable-files><scrapeable-files sequence="2" will-be-invoked-manually="false" tidy-html="jtidy"><last-scraped-data></last-scraped-data><URL>http://www.youtube.com/watch</URL><last-request></last-request><name>Detailed</name><HTTPParameters sequence="1"><key>v</key><type>GET</type><value>~#VIDID#~</value></HTTPParameters><script-instances><owner-type>ScrapeableFile</owner-type><owner-name>Detailed</owner-name></script-instances></scrapeable-files></scraping-session>